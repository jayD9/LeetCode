{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * public class ListNode \{\
 *     int val;\
 *     ListNode next;\
 *     ListNode(int x) \{ val = x; \}\
 * \}\
 */\
class Solution \{\
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) \{\
        ListNode result = new ListNode(0);\
        ListNode curr = result;\
        ListNode temp1 = l1;\
        ListNode temp2 = l2;\
        int flag = 0;\
        int carry = 0;\
        while(temp1 != null || temp2 != null)\{\
            int x = (temp1 != null) ? temp1.val:0;\
            int y = (temp2 != null)?temp2.val:0;\
            int sum = x+y+carry;\
            carry = sum / 10;\
            curr.next = new ListNode((sum % 10));\
            curr = curr.next;  \
            temp1 = (temp1 != null) ? temp1.next:temp1;\
            temp2 = (temp2 != null) ? temp2.next:temp2;\
        \}\
        if(carry>0)\{\
            curr.next = new ListNode(carry);\
        \}\
        \
        return result.next;\
        \
    \}\
\}}